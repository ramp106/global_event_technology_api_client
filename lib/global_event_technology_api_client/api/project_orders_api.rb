=begin
#Project API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'uri'

module GlobalEventTechnologyApiClient
  class ProjectOrdersApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # @param project_id 
    # @param order_id 
    # @param args 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def project_orders_create(project_id, order_id, args, opts = {})
      project_orders_create_with_http_info(project_id, order_id, args, opts)
      nil
    end

    # @param project_id 
    # @param order_id 
    # @param args 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def project_orders_create_with_http_info(project_id, order_id, args, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ProjectOrdersApi.project_orders_create ...'
      end
      # verify the required parameter 'project_id' is set
      if @api_client.config.client_side_validation && project_id.nil?
        fail ArgumentError, "Missing the required parameter 'project_id' when calling ProjectOrdersApi.project_orders_create"
      end
      # verify the required parameter 'order_id' is set
      if @api_client.config.client_side_validation && order_id.nil?
        fail ArgumentError, "Missing the required parameter 'order_id' when calling ProjectOrdersApi.project_orders_create"
      end
      # verify the required parameter 'args' is set
      if @api_client.config.client_side_validation && args.nil?
        fail ArgumentError, "Missing the required parameter 'args' when calling ProjectOrdersApi.project_orders_create"
      end
      # resource path
      local_var_path = '/projects/{projectId}/order/{orderId}'.sub('{' + 'projectId' + '}', project_id.to_s).sub('{' + 'orderId' + '}', order_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(args)
      auth_names = ['apikey']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ProjectOrdersApi#project_orders_create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
